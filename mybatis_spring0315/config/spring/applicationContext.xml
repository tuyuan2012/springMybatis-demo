<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
		
	</bean>
	
	<!-- 原始dao -->
	<bean id="userDao" class="cn.itcast.mybatis.dao.UserDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- mapper代理方法，使用MapperFactoryBean -->
	<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
			mapper接口地址
			<property name="mapperInterface" value="cn.itcast.mybatis.mapper.UserMapper"/>
			<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean> -->
	<!-- 使用MapperScannerConfigurer扫描mapper
	扫描器将mapper扫描出来自动 注册到spring容器，bean的id是类名(首字母小写)
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包 
		如果扫描多个包中间使用半角逗号分隔
		如果使用扫描器，不用在sqlmapconfig.xml中去配置mapper的扫描了，如果使用mapper代理的开发，在SqlMapConfig.xml中不用配置mapper项了
		-->
		<property name="basePackage" value="cn.itcast.mybatis.mapper"/>
		<!-- 使用sqlSessionFactoryBeanName注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 
		注意： 这里使用sqlSessionFactoryBeanName而不使用sqlSessionFactory原因如下：
MapperScannerConigurer在扫描mapper时需要注入 sqlSessionFactory，如果使用
<property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
会存在PropertyPlaceholderConfigurer还没来得及替换dataSource定义中的${jdbc.driver}等数据源变量就注入到了MapperScannerConigurer中，将导致数据库连接不上，如果改为如下方式可以解决问题：
		
		 -->
		
	</bean>
	

</beans>